openapi: 3.0.0
info:
  version: 1.0.0
  title: Twitter-clone-API
  description: Twitter-clone-API's MVP

servers:
  - url: http://localhost:80/api
    description: local

securityDefinitions:
  Bearer:
    type: Authorization
    in: path

paths:
  /users/{user_id}:
    get:
      tags:
        - users
      summary: ユーザー情報取得
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
      responses:
        '200':
          description: 処理成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_get_users_user_id'
  /tweets:
    get:
      tags:
        - tweets
      summary: 全ツイート一覧取得
      responses:
        '200':
          description: 処理成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_get_tweets'
    post:
      tags:
        - tweets
      summary: ツイート投稿
      security:
        - Bearer: []
      parameters:
        - name: content-type
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/content-type'
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_post_tweets'
      responses:
        '200':
          description: 処理成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_only_result'
  /tweets/{tweet_id}/:
    get:
      tags:
        - tweets
      summary: ツイート情報取得
      parameters:
        - name: tweet_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
      responses:
        '200':
          description: 処理成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_get_tweets_tweet_id'
    delete:
      tags:
        - tweets
      summary: ツイート削除
      security:
        - Bearer: []
      parameters:
        - name: tweet_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/Authorization'
      responses:
        '200':
          description: 処理成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_only_result'
  /like:
    post:
      tags:
        - like
      summary: いいね付与
      security:
        - Bearer: []
      parameters:
        - name: content-type
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/content-type'
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_like'
      responses:
        '200':
          description: 処理成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_only_result'
    delete:
      tags:
        - like
      summary: いいね削除
      security:
        - Bearer: []
      parameters:
        - name: content-type
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/content-type'
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_like'
        required: true
      responses:
        '200':
          description: 処理成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_only_result'
  /login:
    post:
      tags:
        - auth
      summary: ログイン
      parameters:
        - name: content-type
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/content-type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_post_login'
        required: true
      responses:
        '200':
          description: 処理成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_post_login'
  /register:
    post:
      tags:
        - auth
      summary: ユーザ登録
      parameters:
        - name: content-type
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/content-type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_post_register'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response_only_result'

components:
  schemas:
    # パラメタ
    content-type:
      example: "application/json"
    Authorization:
      description: アクセストークン
      example: "Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
    result:
      description: 処理成功可否
      type: boolean
    id:
      type: integer
    user_name:
      type: string
      maxLength: 32
    email:
      type: string
      maxLength: 256
      example: hoge@example.com
    password:
      type: string
      format: password
      minLength: 8
    content:
      type: string
      maxLength: 140
    date:
      type: string
      format: date-time
    # オブジェクト
    user:
      description: ユーザ詳細
      type: object
      properties:
        user_id:
          $ref: '#/components/schemas/id'
        user_name:
          $ref: '#/components/schemas/user_name'
        tweets:
          $ref: '#/components/schemas/tweets'
        liked_tweets:
          $ref: '#/components/schemas/tweets'
      required:
        - user_id
        - user_name
        - tweets
        - liked_tweets
        - date
    users:
      description: ツイート配列
      type: array
      items:
        type: object
        properties:
          user_id:
            $ref: '#/components/schemas/id'
          user_name:
            $ref: '#/components/schemas/user_name'
        required:
          - user_id
          - user_name
    tweet:
      description: ツイート詳細
      type: object
      properties:
        tweet_id:
          $ref: '#/components/schemas/id'
        user_name:
          $ref: '#/components/schemas/user_name'
        content:
          $ref: '#/components/schemas/content'
        liked_users:
          $ref: '#/components/schemas/users'
        date:
          $ref: '#/components/schemas/date'
      required:
        - tweet_id
        - user_name
        - content
        - liked_users
        - date
    tweets:
      description: ツイート配列
      type: array
      items:
        type: object
        properties:
          tweet_id:
            $ref: '#/components/schemas/id'
          user_name:
            $ref: '#/components/schemas/user_name'
          content:
            $ref: '#/components/schemas/content'
          count_likes:
            type: integer
          date:
            $ref: '#/components/schemas/date'
        required:
          - tweet_id
          - user_name
          - content
          - count_likes
          - date
    # リクエスト
    request_post_tweets:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/content'
      required:
        - content
    request_like:
      type: object
      properties:
        tweet_id:
          $ref: '#/components/schemas/id'
      required:
        - tweet_id
    request_post_login:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/user_name'
        password:
          $ref: '#/components/schemas/password'
      required:
        - name
        - password
    request_post_register:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/user_name'
        email:
          $ref: '#/components/schemas/email'
        password:
          $ref: '#/components/schemas/password'
      required:
        - name
        - email
        - password
    # レスポンス
    response_only_result:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/result'
      required:
        - result
    response_get_users_user_id:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/result'
        user:
          $ref: '#/components/schemas/user'
      required:
        - result
        - user
    response_get_tweets:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/result'
        tweets:
          $ref: '#/components/schemas/tweets'
      required:
        - result
        - tweets
    response_get_tweets_tweet_id:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/result'
        tweet:
          $ref: '#/components/schemas/tweet'
      required:
        - result
        - tweet
    response_post_login:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/result'
        token:
          type: string
      required:
        - result
        - token
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API

tags:
  - name: users
  - name: tweets
  - name: like
  - name: auth
